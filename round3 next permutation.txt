Given an array perm[] of size N denoting a number. Find its next permutation. ie- rearrange the digits into the lexicographically next greater permutation.
 If such arrangement is not possible, it must be rearranged as the lowest possible order ie, sorted in an ascending order.




class Solution:
    def nextPermutation(self,perm,N):
        temp=False
        l=len(perm)-2
        while(l>=0):
            if(perm[l]<perm[l+1]):
                temp=True
                break
            l=l-1
        if not temp:
            perm.sort()
        else:
            r=self.maxIndex(l+1,perm,perm[l])
            perm[l],perm[r]=perm[r],perm[l]
            perm[l+1:]=perm[l+1:][::-1]
        return perm
    def maxIndex(self,index,k,curr):
        res=-1
        inex=0
        for i in range(index,len(k)):
            if(k[i]>curr):
                if(res==-1):
                    res=curr
                    index=i
                else:
                    res=min(res,k[i])
                    index=i
        return index
